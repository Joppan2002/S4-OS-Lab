#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include <sys/types.h>
#include <sys/wait.h>

int main() {
    pid_t pid;
    int status;

    pid = fork();
    if (pid < 0) {
        fprintf(stderr, "Fork Failed");
        exit(-1);
    }
    else if (pid == 0) {
        // child process
        printf("Child process, pid = %d\n", getpid());
        char *args[] = {"ls", "-l", NULL};
        execvp(args[0], args);
    }
    else {
        // parent process
        printf("Parent process, pid = %d\n", getpid());
        wait(&status);
        printf("Child process completed with status %d\n", status);
    }
    exit(0);
}
